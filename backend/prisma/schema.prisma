generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model turn_restrictions {
  from_edge    Int
  via_node     Int
  to_edge      Int
  restriction  String?
  vehicle_type String?

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model routing_nodes {
  id                                                                    Int                       @id @default(autoincrement())
  lat                                                                   Float
  lon                                                                   Float
  foot                                                                  Boolean?                  @default(false)
  motorbike                                                             Boolean?                  @default(false)
  car                                                                   Boolean?                  @default(false)
  routing_edges_car_routing_edges_car_sourceTorouting_nodes             routing_edges_car[]       @relation("routing_edges_car_sourceTorouting_nodes")
  routing_edges_car_routing_edges_car_targetTorouting_nodes             routing_edges_car[]       @relation("routing_edges_car_targetTorouting_nodes")
  routing_edges_foot_routing_edges_foot_sourceTorouting_nodes           routing_edges_foot[]      @relation("routing_edges_foot_sourceTorouting_nodes")
  routing_edges_foot_routing_edges_foot_targetTorouting_nodes           routing_edges_foot[]      @relation("routing_edges_foot_targetTorouting_nodes")
  routing_edges_motorbike_routing_edges_motorbike_sourceTorouting_nodes routing_edges_motorbike[] @relation("routing_edges_motorbike_sourceTorouting_nodes")
  routing_edges_motorbike_routing_edges_motorbike_targetTorouting_nodes routing_edges_motorbike[] @relation("routing_edges_motorbike_targetTorouting_nodes")

  @@ignore
}

model routing_edges_car {
  id                                                    Int                      @id @default(autoincrement())
  source                                                Int
  target                                                Int
  length_m                                              Float?
  cost                                                  Float?
  reverse_cost                                          Float?
  oneway                                                Boolean?
  oneway_motorbike                                      Boolean?
  maxspeed                                              Int?
  lanes                                                 Int?
  name                                                  String?
  highway                                               String?
  surface                                               String?
  geom                                                  Unsupported("geometry")?
  car                                                   Boolean?
  routing_nodes_routing_edges_car_sourceTorouting_nodes routing_nodes            @relation("routing_edges_car_sourceTorouting_nodes", fields: [source], references: [id], onDelete: NoAction, onUpdate: NoAction)
  routing_nodes_routing_edges_car_targetTorouting_nodes routing_nodes            @relation("routing_edges_car_targetTorouting_nodes", fields: [target], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model routing_edges_foot {
  id                                                     Int                      @id @default(autoincrement())
  source                                                 Int
  target                                                 Int
  length_m                                               Float?
  cost                                                   Float?
  reverse_cost                                           Float?
  oneway                                                 Boolean?
  oneway_motorbike                                       Boolean?
  maxspeed                                               Int?
  lanes                                                  Int?
  name                                                   String?
  highway                                                String?
  surface                                                String?
  geom                                                   Unsupported("geometry")?
  foot                                                   Boolean?
  routing_nodes_routing_edges_foot_sourceTorouting_nodes routing_nodes            @relation("routing_edges_foot_sourceTorouting_nodes", fields: [source], references: [id], onDelete: NoAction, onUpdate: NoAction)
  routing_nodes_routing_edges_foot_targetTorouting_nodes routing_nodes            @relation("routing_edges_foot_targetTorouting_nodes", fields: [target], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model routing_edges_motorbike {
  id                                                          Int                      @id @default(autoincrement())
  source                                                      Int
  target                                                      Int
  length_m                                                    Float?
  cost                                                        Float?
  reverse_cost                                                Float?
  oneway                                                      Boolean?
  oneway_motorbike                                            Boolean?
  maxspeed                                                    Int?
  lanes                                                       Int?
  name                                                        String?
  highway                                                     String?
  surface                                                     String?
  geom                                                        Unsupported("geometry")?
  motorbike                                                   Boolean?
  routing_nodes_routing_edges_motorbike_sourceTorouting_nodes routing_nodes            @relation("routing_edges_motorbike_sourceTorouting_nodes", fields: [source], references: [id], onDelete: NoAction, onUpdate: NoAction)
  routing_nodes_routing_edges_motorbike_targetTorouting_nodes routing_nodes            @relation("routing_edges_motorbike_targetTorouting_nodes", fields: [target], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
